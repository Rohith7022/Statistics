#Cluster Analysis to characterize respondents based on background variables

# Load necessary libraries
getwd()
## [1] "/Users/rohithr/sip"
options(repos = c(CRAN = "https://cloud.r-project.org"))

options(repos = c(CRAN = "https://cloud.r-project.org"))
install.packages("fitdistrplus")
## 
## The downloaded binary packages are in
##  /var/folders/p4/7k7s59gs6fbb4fdxvxmp_0lc0000gn/T//Rtmpe234pv/downloaded_packages
library(readr)
library(dplyr)
## 
## Attaching package: 'dplyr'
## The following objects are masked from 'package:stats':
## 
##     filter, lag
## The following objects are masked from 'package:base':
## 
##     intersect, setdiff, setequal, union
library(factoextra)
## Loading required package: ggplot2
## Welcome! Want to learn more? See two factoextra-related books at https://goo.gl/ve3WBa
library(cluster)
install.packages("NbClust")
## 
## The downloaded binary packages are in
##  /var/folders/p4/7k7s59gs6fbb4fdxvxmp_0lc0000gn/T//Rtmpe234pv/downloaded_packages
library(NbClust)
library(ggplot2)

# Load data from Downloads folder (Mac)
data <- read.csv("~/Downloads/Survey.csv")



# Step 2: View structure to identify background variables
str(data)
## 'data.frame':    70 obs. of  50 variables:
##  $ City                                      : chr  "Bangalore" "Bangalore" "Bangalore" "Bangalore" ...
##  $ Sex                                       : chr  "M" "M" "F" "M" ...
##  $ Age                                       : chr  "26-35" "46-60" "46-60" "36-45" ...
##  $ Occupation                                : chr  "Private Sector" "Government/PSU" "Government/PSU" "Private Sector" ...
##  $ Monthly.Household.Income                  : chr  "85,001 to105,000" "45,001 to 65,000" "25,001 to 45,000" ">125000" ...
##  $ Income                                    : int  95000 55000 35000 200000 95000 75000 200000 35000 115000 115000 ...
##  $ Planning.to.Buy.a.new.house               : chr  "Yes" "Yes" "Yes" "Yes" ...
##  $ Time.Frame                                : chr  "6M to 1Yr" "6M to 1Yr" "<6 Months" "<6 Months" ...
##  $ Reasons.for.buying.a.house                : chr  "Residing" "Investment" "Rental Income" "Investment" ...
##  $ what.type.of.House                        : chr  "Apartment" "Apartment" "Apartment" "Apartment" ...
##  $ Number.of.rooms                           : chr  "2BHK" "2BHK" "1BHK" "3BHK" ...
##  $ Size.of.House                             : chr  "1001-1400" "601-1000" "<600" "1401-1800" ...
##  $ Budget                                    : chr  "65.1 to 80L" "25.1 to 40L" "<25L" "95.1 to110L" ...
##  $ Finished.Semi.Finished                    : chr  "Semifurnished" "Semifurnished" "Semifurnished" "Furnished" ...
##  $ Influence.Decision                        : chr  "Site visits" "Newspaper" "Hoarding" "Electronic/Internet" ...
##  $ Maintainance                              : chr  "2001to 4000" "<2000" "<2000" "6001 to 8000" ...
##  $ EMI                                       : chr  "35.1K to 50K" "20.1K to 35K" "<20K" ">65K" ...
##  $ X1.Proximity.to.city                      : int  3 3 1 4 4 3 3 2 4 5 ...
##  $ X2.Proximity.to.schools                   : int  5 5 2 5 2 2 3 2 3 2 ...
##  $ X3..Proximity.to.transport                : int  5 5 5 3 3 4 4 4 5 4 ...
##  $ X4..Proximity.to.work.place               : int  2 3 2 5 4 4 4 3 5 2 ...
##  $ X5..Proximity.to.shopping                 : int  1 1 1 4 3 2 3 1 1 2 ...
##  $ X1..Gym.Pool.Sports.facility              : int  2 1 4 5 2 3 4 1 3 4 ...
##  $ X2..Parking.space                         : int  5 4 3 5 4 4 5 2 3 4 ...
##  $ X3.Power.back.up                          : int  3 2 2 4 3 4 5 3 3 3 ...
##  $ X4.Water.supply                           : int  5 4 4 5 4 4 5 4 4 3 ...
##  $ X5.Security                               : int  3 3 5 5 4 3 4 1 3 3 ...
##  $ X1..Exterior.look                         : int  2 1 1 4 4 3 4 1 3 4 ...
##  $ X2..Unit.size                             : int  4 4 4 4 3 2 3 3 3 3 ...
##  $ X3..Interior.design.and.branded.components: int  4 4 3 5 4 4 5 3 3 4 ...
##  $ X4..Layout.plan..Integrated.etc..         : int  4 2 2 5 4 3 5 4 3 4 ...
##  $ X5..View.from.apartment                   : int  4 2 2 5 4 3 4 1 2 4 ...
##  $ X1..Price                                 : int  5 5 4 5 4 5 5 5 4 5 ...
##  $ X2..Booking.amount                        : int  1 1 2 2 2 2 2 3 2 1 ...
##  $ X3..Equated.Monthly.Instalment..EMI.      : int  4 4 5 4 3 4 5 4 4 5 ...
##  $ X4..Maintenance.charges                   : int  3 4 4 2 4 3 4 4 3 4 ...
##  $ X5..Availability.of.loan                  : int  3 4 2 2 4 3 4 3 4 4 ...
##  $ X1..Builder.reputation                    : int  4 5 4 5 4 5 5 4 4 5 ...
##  $ X2..Appreciation.potential                : int  5 4 4 4 3 4 5 3 4 4 ...
##  $ X3..Profile.of.neighbourhood              : int  4 3 4 5 4 4 4 3 3 4 ...
##  $ X4..Availability.of.domestic.help         : int  1 2 4 5 3 3 3 2 3 2 ...
##  $ Time                                      : int  9 9 3 3 18 3 9 3 18 3 ...
##  $ Size                                      : int  1200 800 400 1600 800 800 1600 300 800 1600 ...
##  $ Budgets                                   : num  72.5 32.5 12.5 102.5 52.5 ...
##  $ Maintainances                             : int  30000 120 10000 70000 30000 30000 50000 10000 30000 50000 ...
##  $ EMI.1                                     : int  42500 27500 10000 80000 42500 42500 80000 10000 42500 80000 ...
##  $ ages                                      : num  30.5 53 53 40.5 30.5 40.5 53 30.5 40.5 53 ...
##  $ sex                                       : chr  "M" "M" "F" "M" ...
##  $ Finished.Semi.Finished.1                  : chr  "Semifurnished" "Semifurnished" "Semifurnished" "Furnished" ...
##  $ Influence.Decision.1                      : chr  "Site visits" "Newspaper" "Hoarding" "Electronic/Internet" ...
# Step 3: Select background variables for clustering
# Modify these column names based on actual column headers in your file
background_vars <- data %>%
  select(Sex, Age, Occupation, City, Income)  # adjust as needed

# Step 4: Check for missing values and drop incomplete rows
background_vars <- na.omit(background_vars)

# Step 5: Convert categorical variables to numeric (one-hot encoding)
background_encoded <- model.matrix(~ . -1, data = background_vars)

# Step 6: Standardize the data
background_scaled <- scale(background_encoded)

# Step 7: Determine the optimal number of clusters (Elbow method)
fviz_nbclust(background_scaled, kmeans, method = "wss") +
  ggtitle("Elbow Method for Optimal Clusters")
 
# Step 8: Apply K-Means clustering with selected number of clusters (e.g., 3)
set.seed(123)
kmeans_result <- kmeans(background_scaled, centers = 3, nstart = 25)

# Step 9: Add cluster labels to original data
data$Cluster <- as.factor(kmeans_result$cluster)

# Step 10: View summary statistics for each cluster
table(data$Cluster)
## 
##  1  2  3 
## 34  6 30
# Step 11: Characterize clusters (e.g., average income group by cluster)
aggregate(background_encoded, by = list(Cluster = data$Cluster), mean)
##   Cluster SexF SexM   Age18-25  Age26-35  Age36-45  Age46-60
## 1       1  0.0  1.0 0.05882353 0.2941176 0.3529412 0.2647059
## 2       2  0.5  0.5 0.00000000 0.0000000 0.0000000 0.0000000
## 3       3  1.0  0.0 0.00000000 0.2666667 0.3333333 0.3666667
##   OccupationPrivate Sector OccupationRetired OccupationSelf Employed
## 1                0.5294118                 0               0.2941176
## 2                0.0000000                 1               0.0000000
## 3                0.5000000                 0               0.2333333
##   CityChennai CityDelhi CityMumbai    Income
## 1   0.2647059 0.2352941  0.2647059  94117.65
## 2   0.0000000 0.5000000  0.5000000 168333.33
## 3   0.2000000 0.3000000  0.2666667  90666.67
# Optional: Visualize clusters
fviz_cluster(kmeans_result, data = background_scaled,
             geom = "point", ellipse.type = "convex",
             palette = "jco", ggtheme = theme_minimal())
